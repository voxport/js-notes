            // Метод reduce в JavaScript применяется для обработки массивов и сводит (reduce) их элементы к одному значению. 
            // Он принимает два аргумента: функцию обратного вызова и необязательный начальный аккумулятор. 
            // Функция обратного вызова выполняется для каждого элемента массива и имеет доступ к текущему значению аккумулятора 
            // и текущему элементу массива. 
            // Её результат передается следующему вызову функции, пока не останется только одно значение - итоговый результат, 
            // который возвращается методом reduce. Этот метод может быть использован, например, для вычисления суммы, 
            // произведения или среднего значения элементов массива.

      /*       const numbers = [1, 2, 3, 4, 5];
            const sum = numbers.reduce((accumulator, currentValue) => {
              return accumulator + currentValue;
            }, 0);
            console.log(sum); // 15 */
//-----------------------------------------------------------------------------------------------------------------------------------------------------------

// Пример:
// 2 Напишите функцию, которая принимает массив чисел и возвращает сумму элементов этого массива.
// [1, 2, 3, 4, 5]

let numberAll = [1, 2, 3, 4, 5]; //15

        function numberSum(numberAll) {
                return numberAll.reduce((total, n) => total + n)
        }
        console.log(numberSum(numberAll));
        console.log(numberAll); // то есть, значение переменной после применения функции осталось пержним? То есть, 
                                // если функция не записывает свой результат в новую переменную, она фактически ничего не изменяет?